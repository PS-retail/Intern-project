{"ast":null,"code":"var _jsxFileName = \"/Users/annllamb/Documents/GitHub/Intern-project/frontend/src/components/videoChat/room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Video from 'twilio-video';\nimport Participant from './participent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = ({\n  roomName,\n  token,\n  handleLogout\n}) => {\n  _s();\n\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n    };\n\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on('participantConnected', participantConnected);\n      room.on('participantDisconnected', participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === 'connected') {\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [roomName, token]);\n  const remoteParticipants = participants.map(participant => /*#__PURE__*/_jsxDEV(Participant, {\n    participant: participant\n  }, participant.sid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"local-participant\",\n      children: room ? /*#__PURE__*/_jsxDEV(Participant, {\n        participant: room.localParticipant\n      }, room.localParticipant.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Remote Participants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remote-participants\",\n      children: remoteParticipants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Room, \"Dd0waZvN+7rMSmtiPOi4sRV+5ds=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/annllamb/Documents/GitHub/Intern-project/frontend/src/components/videoChat/room.js"],"names":["React","useState","useEffect","Video","Participant","Room","roomName","token","handleLogout","room","setRoom","participants","setParticipants","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","connect","name","then","on","forEach","currentRoom","localParticipant","state","tracks","trackPublication","track","stop","disconnect","remoteParticipants","map","sid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Video from 'twilio-video';\nimport Participant from './participent';\n\n\n\n\n\nconst Room = ({ roomName, token, handleLogout }) => {\n    const [room, setRoom] = useState(null);\n    const [participants, setParticipants] = useState([]);\n\n    \n    \n    useEffect(() => {\n        const participantConnected = participant => {\n          setParticipants(prevParticipants => [...prevParticipants, participant]);\n        };\n        const participantDisconnected = participant => {\n          setParticipants(prevParticipants =>\n            prevParticipants.filter(p => p !== participant)\n          );\n        };\n        Video.connect(token, {\n          name: roomName\n        }).then(room => {\n          setRoom(room);\n          room.on('participantConnected', participantConnected);\n          room.on('participantDisconnected', participantDisconnected);\n          room.participants.forEach(participantConnected);\n        });\n        return () => {\n            setRoom(currentRoom => {\n              if (currentRoom && currentRoom.localParticipant.state === 'connected') {\n                currentRoom.localParticipant.tracks.forEach(function(trackPublication) {\n                  trackPublication.track.stop();\n                });\n                currentRoom.disconnect();\n                return null;\n              } else {\n                return currentRoom;\n              }\n            });\n          };\n          \n    }, [roomName, token]);\n\n    const remoteParticipants = participants.map(participant => (\n        <Participant key={participant.sid} participant={participant} />\n    ));  \n\n    return (\n    <div className=\"room\">\n        <h2>Room: {roomName}</h2>\n        <button onClick={handleLogout}>Log out</button>\n        <div className=\"local-participant\">\n        {room ? (\n            <Participant\n            key={room.localParticipant.sid}\n            participant={room.localParticipant}\n            />\n        ) : (\n            ''\n        )}\n        </div>\n        <h3>Remote Participants</h3>\n        <div className=\"remote-participants\">{remoteParticipants}</div>\n    </div>\n    );  \n};\n\n\n\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}